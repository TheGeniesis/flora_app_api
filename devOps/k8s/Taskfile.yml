version: 3
env:
  HELMFILE_HELM3: 1
vars:
  K8S_IMAGE: kindest/node:v1.22.2
  K8S_NAME: kind
  HELM_VERSION: v3.7.1
  KUBERNETES_VERSION: v1.22.2
  KIND_VERSION: v0.11.1
  HELMFILE_VERSION: v0.142.0
  HELMFILE_BASE_COMMAND: ./helmfile --helm-binary=./helm
  PROMETHEUS_OPERATOR_VERSION: v0.53.1
tasks:
  default:
    cmds:
      - task -l
  cluster:create:
    desc: KIND cluster create
    cmds:
      - ./kind create cluster --name {{.K8S_NAME}} --image {{.K8S_IMAGE}} --config kind-cluster.yaml
#      - ./kubectl apply -f pvc.yaml
  cluster:delete:
    desc: KIND cluster delete
    cmds:
      - ./kind delete cluster --name {{.K8S_NAME}}

  kubeconfig:
    desc: Prepare envrc file with kubeconfig path.
    cmds:
      - ./kind get kubeconfig --name={{.K8S_NAME}} > kind_kubeconfig
      - echo "export KUBECONFIG={{.KUBE_KIND_CONF_DIR}}/kind_kubeconfig" > .envrc
      - direnv allow
    vars:
      KUBE_KIND_CONF_DIR:
        sh: pwd

  rebuild:
    desc: Rebuild cluster and monitoring stack
    cmds:
    - task: cluster:delete
    - task: cluster:create
    - task: kubeconfig
    - task: deploy:ingress
    - task: load-image-kind
    - task: deploy:crd
    - task: deploy:k8s

  install:
    desc: Install tools
    cmds:
    - task: install:kind
    - task: install:k8s
    - task: install:helm

  deploy:k8s:
    desc: deploy prometheus operator
    cmds:
      - ./helm plugin install https://github.com/databus23/helm-diff || true
      - ./kubectl apply -f resources/namespaces.yaml
      - "{{.HELMFILE_BASE_COMMAND}} apply"
      - ./kubectl apply -f resources/grafana/dashboards -R

  deploy:crd:
    desc: Deploy CRDs, run only for the first time and after chart update
    cmds:
      - ./kubectl apply --server-side -f {{.PROMETHEUS_URL_PATH}}/monitoring.coreos.com_alertmanagerconfigs.yaml
      - ./kubectl apply --server-side -f {{.PROMETHEUS_URL_PATH}}/monitoring.coreos.com_alertmanagers.yaml
      - ./kubectl apply --server-side -f {{.PROMETHEUS_URL_PATH}}/monitoring.coreos.com_podmonitors.yaml
      - ./kubectl apply --server-side -f {{.PROMETHEUS_URL_PATH}}/monitoring.coreos.com_probes.yaml
      - ./kubectl apply --server-side -f {{.PROMETHEUS_URL_PATH}}/monitoring.coreos.com_prometheuses.yaml --force-conflicts=true
      - ./kubectl apply --server-side -f {{.PROMETHEUS_URL_PATH}}/monitoring.coreos.com_prometheusrules.yaml
      - ./kubectl apply --server-side -f {{.PROMETHEUS_URL_PATH}}/monitoring.coreos.com_servicemonitors.yaml
      - ./kubectl apply --server-side -f {{.PROMETHEUS_URL_PATH}}/monitoring.coreos.com_thanosrulers.yaml
    vars:
      PROMETHEUS_URL_PATH: https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/{{.PROMETHEUS_OPERATOR_VERSION}}/example/prometheus-operator-crd

  deploy:ingress:
    desc: deploy basic ingress resources
    cmds:
      - ./kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/kind/deploy.yaml

  install:helm:
    desc: install helm 3
    cmds:
      - wget -qO-  https://get.helm.sh/helm-{{.HELM_VERSION}}-{{OS}}-{{ARCH}}.tar.gz | tar xvz -C ./
      - mv {{OS}}-{{ARCH}}/helm ./
      - chmod 755 helm
      - rm -rf {{OS}}-{{ARCH}}
      - curl -Lo ./helmfile https://github.com/roboll/helmfile/releases/download/{{.HELMFILE_VERSION}}/helmfile_{{OS}}_{{ARCH}}
      - chmod +x ./helmfile

  install:k8s:
    desc: Install kubectl
    cmds:
      - curl -LO https://storage.googleapis.com/kubernetes-release/release/{{.KUBERNETES_VERSION}}/bin/{{OS}}/{{ARCH}}/kubectl
      - chmod +x ./kubectl

  install:kind:
    desc: Install KIND
    cmds:
      - curl -Lo ./kind "https://github.com/kubernetes-sigs/kind/releases/download/{{.KIND_VERSION}}/kind-{{OS}}-{{ARCH}}"
      - chmod +x ./kind

  forward:
    desc: local port forward
    cmds:
      - ./kubectl port-forward service/flora-api 3002:80

  load-image-kind:
    desc: Put image in kind
    cmds:
      - ./kind load docker-image flora_app/python:latest
      - ./kind load docker-image flora_app/rabbitmq:latest
